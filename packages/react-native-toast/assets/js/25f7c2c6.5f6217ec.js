"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[901],{4440:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>r});const s=JSON.parse('{"id":"features/customization","title":"Customization","description":"Positioning","source":"@site/docs/features/customization.md","sourceDirName":"features","slug":"/features/customization","permalink":"/packages/react-native-toast/features/customization","draft":false,"unlisted":false,"editUrl":"https://github.com/backpackapp-io/react-native-toast/website/docs/features/customization.md","tags":[],"version":"current","frontMatter":{"id":"customization","title":"Customization","sidebar_label":"Customization","slug":"/features/customization"},"sidebar":"tutorialSidebar","previous":{"title":"Accessibility","permalink":"/packages/react-native-toast/features/accessibility"},"next":{"title":"Toast Handler Examples","permalink":"/packages/react-native-toast/api/toast-toast-handlers"}}');var o=n(4848),i=n(8453);const a={id:"customization",title:"Customization",sidebar_label:"Customization",slug:"/features/customization"},c=void 0,l={},r=[{value:"Positioning",id:"positioning",level:2},{value:"Position Types",id:"position-types",level:3},{value:"Extra Insets",id:"extra-insets",level:3},{value:"Styling Customization",id:"styling-customization",level:2},{value:"Default Style",id:"default-style",level:3},{value:"Individual Toast Style",id:"individual-toast-style",level:3},{value:"Icons",id:"icons",level:2},{value:"Provided Icons",id:"provided-icons",level:3},{value:"Emoji Icons",id:"emoji-icons",level:3},{value:"React Element Icons",id:"react-element-icons",level:3},{value:"Custom Toast Message",id:"custom-toast-message",level:2},{value:"Custom Toast Component",id:"custom-toast-component",level:2}];function d(e){const t={code:"code",em:"em",h2:"h2",h3:"h3",img:"img",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h2,{id:"positioning",children:"Positioning"}),"\n",(0,o.jsxs)(t.p,{children:["You can customize the position of the toast message by passing the ",(0,o.jsx)(t.code,{children:"position"})," option to the ",(0,o.jsx)(t.code,{children:"toast"})," function. Use the enum provided by React Native Toast."]}),"\n",(0,o.jsx)(t.h3,{id:"position-types",children:"Position Types"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-js",children:"import {ToastPosition} from \"@backpackapp-io/react-native-toast\";\n\ntoast('Top Position', {\n  position: ToastPosition.TOP,\n});\n\ntoast('Bottom Position', {\n  position: ToastPosition.BOTTOM,\n});\n\ntoast('Bottom Right Position', {\n  position: ToastPosition.BOTTOM_RIGHT,\n});\n\n"})}),"\n",(0,o.jsx)(t.h3,{id:"extra-insets",children:"Extra Insets"}),"\n",(0,o.jsxs)(t.p,{children:["You can also add extra insets to the toast message by passing the ",(0,o.jsx)(t.code,{children:"extraInsets"})," option to the ",(0,o.jsx)(t.code,{children:"toast"})," function."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-js",children:"toast('Top Position with Extra Insets', {\n  position: ToastPosition.TOP,\n  extraInsets: {\n    top: 20,\n  },\n});\n"})}),"\n",(0,o.jsx)(t.h2,{id:"styling-customization",children:"Styling Customization"}),"\n",(0,o.jsxs)(t.p,{children:["You can customize the toast style by passing the ",(0,o.jsx)(t.code,{children:"styles"})," option to the ",(0,o.jsx)(t.code,{children:"toast"})," function or by supplying a defaultStyle to the ",(0,o.jsx)(t.code,{children:"<Toasts />"})," component. The ",(0,o.jsx)(t.code,{children:"text"})," style is not applied if you pass a custom message component to the ",(0,o.jsx)(t.code,{children:"toast"})," function."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"styles = {\n  view?: ViewStyle;\n  pressable?: ViewStyle;\n  text?: TextStyle;\n  indicator?: ViewStyle;\n};\n"})}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Toast Diagram",src:n(5910).A+"",width:"812",height:"345"})}),"\n",(0,o.jsx)(t.h3,{id:"default-style",children:"Default Style"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-js",children:"<Toasts\n  defaultStyle={{\n    view: {\n      backgroundColor: 'rgba(0, 0, 0, 0.8)',\n      borderRadius: 8,\n      padding: 16,\n      margin: 16,\n    },\n    text: {\n      color: 'white',\n    },\n    indicator: {\n      marginRight: 16,\n    },\n  }}\n/>\n"})}),"\n",(0,o.jsx)(t.h3,{id:"individual-toast-style",children:"Individual Toast Style"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-js",children:"toast('Custom Style', {\n  styles: {\n    view: {\n      backgroundColor: 'rgba(0, 0, 0, 0.8)',\n      borderRadius: 8,\n      padding: 16,\n      margin: 16,\n    },\n    text: {\n      color: 'white',\n    },\n    indicator: {\n      marginRight: 16,\n    },\n  },\n});\n"})}),"\n",(0,o.jsx)(t.h2,{id:"icons",children:"Icons"}),"\n",(0,o.jsxs)(t.p,{children:["You can add icons to the toast message by passing the ",(0,o.jsx)(t.code,{children:"icon"})," option to the ",(0,o.jsx)(t.code,{children:"toast"})," function."]}),"\n",(0,o.jsx)(t.h3,{id:"provided-icons",children:"Provided Icons"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-js",children:"\nimport {Icon} from 'react-native-elements';\n\ntoast('Icon', {\n  icon: <Icon name=\"check\" />,\n});\n\n"})}),"\n",(0,o.jsx)(t.h3,{id:"emoji-icons",children:"Emoji Icons"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-js",children:"toast('Emoji Icon', {\n  icon: '\ud83d\ude80',\n});\n\n"})}),"\n",(0,o.jsx)(t.h3,{id:"react-element-icons",children:"React Element Icons"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-js",children:"toast('React Element Icon', {\n  icon: <CustomComponent />,\n});\n\n"})}),"\n",(0,o.jsx)(t.h2,{id:"custom-toast-message",children:"Custom Toast Message"}),"\n",(0,o.jsx)(t.p,{children:"You can create a custom message component to display a custom message in the toast."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-js",children:"\nconst CustomMessage = (msg: string) => {\n  return (\n    <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n      <Icon name=\"check\" />\n      <Text>{msg}</Text>\n    </View>\n  )\n}\n\ntoast(<CustomMessage msg=\"Custom Message\" />);\n"})}),"\n",(0,o.jsx)(t.h2,{id:"custom-toast-component",children:"Custom Toast Component"}),"\n",(0,o.jsxs)(t.p,{children:["You can override the entire ",(0,o.jsx)(t.code,{children:"<Toast />"})," component by passing in a customToast prop to each toast function."]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsxs)(t.em,{children:["Note: Since the toast message can be either a string or a React Element, you need to resolve the value of the message by using the ",(0,o.jsx)(t.code,{children:"resolveValue"})," function."]})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-js",children:"\nimport {Toast as ToastType, resolveValue} from \"@backpackapp-io/react-native-toast\";\n\nconst CustomToast = (toast: ToastType) => {\n  return (\n    <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n      <Text>{resolveValue(toast, toast.message)}</Text>\n    </View>\n  )\n}\n\ntoast('Custom Toast Component', {\n  customToast: CustomToast,\n});\n"})})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},5910:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/toast-diagram-903eaa749169ec91972d83336eb96f53.jpg"},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>c});var s=n(6540);const o={},i=s.createContext(o);function a(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);