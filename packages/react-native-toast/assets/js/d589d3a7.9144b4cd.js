"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[924],{6475:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"getting-started","title":"Getting Started","description":"Wrap your App with ` and ` & add the `` component to the root of your app.","source":"@site/docs/getting-started.md","sourceDirName":".","slug":"/getting-started","permalink":"/packages/react-native-toast/getting-started","draft":false,"unlisted":false,"editUrl":"https://github.com/backpackapp-io/react-native-toast/website/docs/getting-started.md","tags":[],"version":"current","frontMatter":{"id":"getting-started","title":"Getting Started","sidebar_label":"Getting Started","slug":"/getting-started"},"sidebar":"tutorialSidebar","previous":{"title":"Introduction","permalink":"/packages/react-native-toast/"},"next":{"title":"<Toasts />","permalink":"/packages/react-native-toast/components/toasts"}}');var r=n(4848),a=n(8453);const o={id:"getting-started",title:"Getting Started",sidebar_label:"Getting Started",slug:"/getting-started"},i=void 0,c={},d=[{value:"Regular Toast",id:"regular-toast",level:4},{value:"Promise Toast",id:"promise-toast",level:4},{value:"Loading Toast",id:"loading-toast",level:4},{value:"Success Toast",id:"success-toast",level:4},{value:"Error Toast",id:"error-toast",level:4}];function l(e){const t={code:"code",em:"em",h4:"h4",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["Wrap your App with ",(0,r.jsx)(t.code,{children:"<GestureHandlerRootView />"})," and ",(0,r.jsx)(t.code,{children:"<SafeAreaProvider />"})," & add the ",(0,r.jsx)(t.code,{children:"<Toasts />"})," component to the root of your app."]}),"\n",(0,r.jsxs)(t.p,{children:["Call ",(0,r.jsx)(t.code,{children:'toast("My Toast Message")'})," whenever you are ready from ",(0,r.jsx)(t.em,{children:"anywhere"})," in your app."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:"import { View, StyleSheet, Text } from 'react-native';\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { toast, Toasts } from '@backpackapp-io/react-native-toast';\nimport { useEffect } from 'react';\n\nexport default function App() {\n  useEffect(() => {\n    toast('Hello');\n  }, []);\n\n  return (\n    <SafeAreaProvider>\n      <GestureHandlerRootView style={styles.container}>\n        <View>{/*The rest of your app*/}</View>\n        <Toasts /> {/* <---- Add Here */}\n      </GestureHandlerRootView>\n    </SafeAreaProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"})}),"\n",(0,r.jsxs)(t.p,{children:["After wrapping your app with ",(0,r.jsx)(t.code,{children:"GestureHandlerRootView"})," and ",(0,r.jsx)(t.code,{children:"SafeAreaProvider"}),", and rendering ",(0,r.jsx)(t.code,{children:"Toasts"})," in your root view, you can call ",(0,r.jsx)(t.code,{children:'toast("My Toast Message")'})," from anywhere in your app."]}),"\n",(0,r.jsx)(t.h4,{id:"regular-toast",children:"Regular Toast"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:'toast("This is my first toast", {\n  duration: 3000,\n});\n'})}),"\n",(0,r.jsx)(t.h4,{id:"promise-toast",children:"Promise Toast"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:"const sleep = new Promise((resolve, reject) => {\n  setTimeout(() => {\n    if (Math.random() > 0.5) {\n      resolve({\n        username: 'Nick',\n      });\n    } else {\n      reject('Username is undefined');\n    }\n  }, 2500);\n});\n\ntoast.promise(\n  sleep,\n  {\n    loading: 'Loading...',\n    success: (data: any) => 'Welcome ' + data.username,\n    error: (err) => err.toString(),\n  },\n  {\n    position: ToastPosition.BOTTOM,\n  }\n);\n"})}),"\n",(0,r.jsx)(t.h4,{id:"loading-toast",children:"Loading Toast"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:"const id = toast.loading('I am loading. Dismiss me whenever...');\n\nsetTimeout(() => {\n  toast.dismiss(id);\n}, 3000);\n"})}),"\n",(0,r.jsx)(t.h4,{id:"success-toast",children:"Success Toast"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:"toast.success('Success!', {\n  width: 300\n});\n"})}),"\n",(0,r.jsx)(t.h4,{id:"error-toast",children:"Error Toast"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:"toast.error('Wow. That Sucked!');\n"})})]})}function u(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>i});var s=n(6540);const r={},a=s.createContext(r);function o(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);